/*		dva_display file
 *	Defines the vars and
 *	functions used to
 *	interact with the display
 *--------------------------*/

#include "DVA.h"

#ifndef _DISPLAY_DEPENDENCIES
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define _DISPLAY_DEPENDENCIES
#endif

#ifndef _DISPLAY_CONST
#define OLED_RESET 4
#define LOGO16_GLCD_HEIGHT 32 
#define LOGO16_GLCD_WIDTH  128
#define _DISPLAY_CONST
#endif

//Arrows definitions
static const unsigned char PROGMEM northeast [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1C,
0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x3F, 0xF0,
0x00, 0x00, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0xC0,
0x00, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0x00,
0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0xFC, 0x00,
0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0x00,
0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0x00,
0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM northwest [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00,
0x1F, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00,
0x07, 0xFF, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xF0, 0x00, 0x03, 0xFF, 0xFC, 0x00,
0x01, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFF, 0xC0, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0xFF, 0xFF, 0xFC,
0x00, 0x7F, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00,
0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00,
0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM southeast [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00,
0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0x00,
0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0xF8, 0x00,
0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00,
0x3F, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0x80,
0x00, 0x3F, 0xFF, 0xC0, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xE0, 0x00, 0x00, 0xFF, 0xE0,
0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x00, 0xF8,
0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM southwest [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
0x00, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00,
0x00, 0x3F, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00,
0x00, 0xFF, 0xFF, 0xFC, 0x00, 0xFF, 0xFF, 0xF0, 0x01, 0xFF, 0xFF, 0xC0, 0x01, 0xFF, 0xFF, 0x00,
0x03, 0xFF, 0xFC, 0x00, 0x03, 0xFF, 0xF0, 0x00, 0x07, 0xFF, 0xC0, 0x00, 0x07, 0xFF, 0x00, 0x00,
0x0F, 0xFC, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00,
0x38, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



static const unsigned char PROGMEM east [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
0x1C, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00,
0x01, 0xF8, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x1F, 0xF0, 0x00,
0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xF0,
0x00, 0x03, 0x00, 0x08, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x1F, 0xFE, 0x00,
0x00, 0x3F, 0xF0, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00,
0x01, 0xF0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


static const unsigned char PROGMEM north [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x03, 0x40, 0x00, 0x00, 0x07, 0x60, 0x00,
0x00, 0x07, 0x60, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x0F, 0x70, 0x00, 0x00, 0x0F, 0x70, 0x00,
0x00, 0x1F, 0x78, 0x00, 0x00, 0x1F, 0x78, 0x00, 0x00, 0x1F, 0x7C, 0x00, 0x00, 0x3F, 0x7C, 0x00,
0x00, 0x7F, 0xFE, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x7C, 0x7F, 0x00, 0x00, 0xFC, 0x3F, 0x00,
0x01, 0xF0, 0x1F, 0x80, 0x01, 0xE0, 0x0F, 0x80, 0x03, 0xC0, 0x07, 0xC0, 0x03, 0x80, 0x01, 0xC0,
0x03, 0x80, 0x00, 0xE0, 0x07, 0x00, 0x00, 0x60, 0x0C, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x10,
0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM south [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x10,
0x08, 0x00, 0x00, 0x10, 0x04, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0xE0, 0x07, 0x00, 0x01, 0xC0,
0x03, 0x80, 0x01, 0xC0, 0x03, 0xE0, 0x03, 0xC0, 0x01, 0xF0, 0x07, 0x80, 0x01, 0xF8, 0x0F, 0x80,
0x00, 0xFC, 0x3F, 0x00, 0x00, 0xFE, 0x3E, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x7F, 0xFE, 0x00,
0x00, 0x3E, 0xFC, 0x00, 0x00, 0x3E, 0xF8, 0x00, 0x00, 0x1E, 0xF8, 0x00, 0x00, 0x1E, 0xF8, 0x00,
0x00, 0x0E, 0xF0, 0x00, 0x00, 0x0E, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x00, 0x00, 0x06, 0xE0, 0x00,
0x00, 0x06, 0xE0, 0x00, 0x00, 0x02, 0xC0, 0x00, 0x00, 0x02, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00,
0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM west [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x0F, 0x80,
0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x0F, 0xFC, 0x00,
0x00, 0x7F, 0xF8, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x10, 0x00, 0xC0, 0x00,
0x0F, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xF0, 0x00,
0x00, 0x0F, 0xF8, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x1F, 0x80,
0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x38,
0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//Private vars
Adafruit_SSD1306 display(OLED_RESET);

/*	display_setup function
 * Initializes the display
 * --------------------------------
 * returns: void
 * ------------------------------*/
void display_setup(){
	display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
	
	display.display();
	delay(2000);
	display.clearDisplay();
}

/*	display_print function
 * Prints a text on the screen
 *---------------------------------
 * @text: The text to be displayed
 * --------------------------------
 * returns: void
 * ------------------------------*/
void display_print(String text){
	display.clearDisplay();
	display.print(text);
}

/*	display_print_arrow function
 * Display the distance and a 
 * directional arrow on the display
 *---------------------------------
 * @distance: Distance to be
 * 		displayed
 * @course: Direction of the arrow
 * --------------------------------
 * returns: void
 * ------------------------------*/
void display_print_arrow(double distance, int course){
	display.clearDisplay();
	display.print(distance);
	delay(1000);
	switch(course){
		case N :
			display.drawBitmap(48, 0,  north, 32, 32, 1);
			break;
		case NE :
			display.drawBitmap(48, 0,  northeast, 32, 32, 1);
			break;
		case SW :
			display.drawBitmap(48, 0,  northwest, 32, 32, 1);
			break;
		case S :
			display.drawBitmap(48, 0,  south, 32, 32, 1);
			break;
		case SE :
			display.drawBitmap(48, 0,  southeast, 32, 32, 1);
			break;
		case SW :
			display.drawBitmap(48, 0,  southwest, 32, 32, 1);
			break;
		case E :
			display.drawBitmap(48, 0,  east, 32, 32, 1);
			break;
		case W :
			display.drawBitmap(48, 0,  east, 32, 32, 1);
			break;
	}
}
